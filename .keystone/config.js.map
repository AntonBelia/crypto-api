{
  "version": 3,
  "sources": ["../keystone.ts", "../schema.ts", "../auth.ts"],
  "sourcesContent": ["import { config } from '@keystone-6/core';\nimport { lists } from './schema';\nimport { withAuth, session } from './auth';\n\nexport default withAuth(\n  config({\n    db: {\n      provider: 'sqlite',\n      url: 'file:./dev.db',\n    },\n    lists,\n    session,\n    server: {\n      cors: {\n        origin: ['http://localhost:3001'],\n        credentials: true,\n        methods: ['GET', 'POST'],\n        allowedHeaders: ['Content-Type', 'Authorization'],\n      },\n      port: 3000,\n      extendExpressApp: (app) => {\n        app.use('/image', require('express').static('image'));\n      },\n    },\n  })\n);\n", "import { list } from '@keystone-6/core';\nimport { allowAll } from '@keystone-6/core/access';\nimport { integer } from '@keystone-6/core/fields';\n\nimport {\n  text,\n  relationship,\n  password,\n  timestamp,\n  select,\n} from '@keystone-6/core/fields';\n\nimport { document } from '@keystone-6/fields-document';\n\nimport type { Lists } from '.keystone/types';\n\nexport const lists: Lists = {\n  Player: list({\n    access: allowAll, \n\n    fields: {\n      name: text({ validation: { isRequired: true } }), \n      wins: integer({ validation: { isRequired: true } }), \n      avatarUrl: text({ validation: { isRequired: true } }), \n    },\n  }),\n\n  User: list({\n    access: allowAll,\n\n    fields: {\n      name: text({ validation: { isRequired: true } }),\n\n      email: text({\n        validation: { isRequired: true },\n        isIndexed: 'unique',\n      }),\n\n      password: password({ validation: { isRequired: true } }),\n\n      posts: relationship({ ref: 'Post.author', many: true }),\n\n      createdAt: timestamp({\n        defaultValue: { kind: 'now' },\n      }),\n    },\n  }),\n\n  Post: list({\n    access: allowAll,\n\n    fields: {\n      title: text({ validation: { isRequired: true } }),\n\n      content: document({\n        formatting: true,\n        layouts: [\n          [1, 1],\n          [1, 1, 1],\n          [2, 1],\n          [1, 2],\n          [1, 2, 1],\n        ],\n        links: true,\n        dividers: true,\n      }),\n\n      author: relationship({\n        ref: 'User.posts',\n\n        ui: {\n          displayMode: 'cards',\n          cardFields: ['name', 'email'],\n          inlineEdit: { fields: ['name', 'email'] },\n          linkToItem: true,\n          inlineConnect: true,\n        },\n\n        many: false,\n      }),\n\n      tags: relationship({\n        ref: 'Tag.posts',\n\n        many: true,\n\n        ui: {\n          displayMode: 'cards',\n          cardFields: ['name'],\n          inlineEdit: { fields: ['name'] },\n          linkToItem: true,\n          inlineConnect: true,\n          inlineCreate: { fields: ['name'] },\n        },\n      }),\n    },\n  }),\n\n  Tag: list({\n   \n    access: allowAll,\n\n    ui: {\n      isHidden: true,\n    },\n\n    fields: {\n      name: text(),\n      posts: relationship({ ref: 'Post.tags', many: true }),\n    },\n  }),\n};\n", "// Welcome to some authentication for Keystone\n//\n// This is using @keystone-6/auth to add the following\n// - A sign-in page for your Admin UI\n// - A cookie-based stateless session strategy\n//    - Using a User email as the identifier\n//    - 30 day cookie expiration\n//\n// This file does not configure what Users can do, and the default for this starter\n// project is to allow anyone - logged-in or not - to do anything.\n//\n// If you want to prevent random people on the internet from accessing your data,\n// you can find out how by reading https://keystonejs.com/docs/guides/auth-and-access-control\n//\n// If you want to learn more about how our out-of-the-box authentication works, please\n// read https://keystonejs.com/docs/apis/auth#authentication-api\n\nimport { randomBytes } from 'crypto';\nimport { createAuth } from '@keystone-6/auth';\n\n// see https://keystonejs.com/docs/apis/session for the session docs\nimport { statelessSessions } from '@keystone-6/core/session';\n\n// for a stateless session, a SESSION_SECRET should always be provided\n//   especially in production (statelessSessions will throw if SESSION_SECRET is undefined)\nlet sessionSecret = process.env.SESSION_SECRET;\nif (!sessionSecret && process.env.NODE_ENV !== 'production') {\n  sessionSecret = randomBytes(32).toString('hex');\n}\n\n// withAuth is a function we can use to wrap our base configuration\nconst { withAuth } = createAuth({\n  listKey: 'User',\n  identityField: 'email',\n\n  // this is a GraphQL query fragment for fetching what data will be attached to a context.session\n  //   this can be helpful for when you are writing your access control functions\n  //   you can find out more at https://keystonejs.com/docs/guides/auth-and-access-control\n  sessionData: 'name createdAt',\n  secretField: 'password',\n\n  // WARNING: remove initFirstItem functionality in production\n  //   see https://keystonejs.com/docs/config/auth#init-first-item for more\n  initFirstItem: {\n    // if there are no items in the database, by configuring this field\n    //   you are asking the Keystone AdminUI to create a new user\n    //   providing inputs for these fields\n    fields: ['name', 'email', 'password'],\n\n    // it uses context.sudo() to do this, which bypasses any access control you might have\n    //   you shouldn't use this in production\n  },\n});\n\n// statelessSessions uses cookies for session tracking\n//   these cookies have an expiry, in seconds\n//   we use an expiry of 30 days for this starter\nconst sessionMaxAge = 60 * 60 * 24 * 30;\n\n// you can find out more at https://keystonejs.com/docs/apis/session#session-api\nconst session = statelessSessions({\n  maxAge: sessionMaxAge,\n  secret: sessionSecret!,\n});\n\nexport { withAuth, session };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,eAAuB;;;ACAvB,kBAAqB;AACrB,oBAAyB;AACzB,oBAAwB;AAExB,IAAAC,iBAMO;AAEP,6BAAyB;AAIlB,IAAM,QAAe;AAAA,EAC1B,YAAQ,kBAAK;AAAA,IACX,QAAQ;AAAA,IAER,QAAQ;AAAA,MACN,UAAM,qBAAK,EAAE,YAAY,EAAE,YAAY,KAAK,EAAE,CAAC;AAAA,MAC/C,UAAM,uBAAQ,EAAE,YAAY,EAAE,YAAY,KAAK,EAAE,CAAC;AAAA,MAClD,eAAW,qBAAK,EAAE,YAAY,EAAE,YAAY,KAAK,EAAE,CAAC;AAAA,IACtD;AAAA,EACF,CAAC;AAAA,EAED,UAAM,kBAAK;AAAA,IACT,QAAQ;AAAA,IAER,QAAQ;AAAA,MACN,UAAM,qBAAK,EAAE,YAAY,EAAE,YAAY,KAAK,EAAE,CAAC;AAAA,MAE/C,WAAO,qBAAK;AAAA,QACV,YAAY,EAAE,YAAY,KAAK;AAAA,QAC/B,WAAW;AAAA,MACb,CAAC;AAAA,MAED,cAAU,yBAAS,EAAE,YAAY,EAAE,YAAY,KAAK,EAAE,CAAC;AAAA,MAEvD,WAAO,6BAAa,EAAE,KAAK,eAAe,MAAM,KAAK,CAAC;AAAA,MAEtD,eAAW,0BAAU;AAAA,QACnB,cAAc,EAAE,MAAM,MAAM;AAAA,MAC9B,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AAAA,EAED,UAAM,kBAAK;AAAA,IACT,QAAQ;AAAA,IAER,QAAQ;AAAA,MACN,WAAO,qBAAK,EAAE,YAAY,EAAE,YAAY,KAAK,EAAE,CAAC;AAAA,MAEhD,aAAS,iCAAS;AAAA,QAChB,YAAY;AAAA,QACZ,SAAS;AAAA,UACP,CAAC,GAAG,CAAC;AAAA,UACL,CAAC,GAAG,GAAG,CAAC;AAAA,UACR,CAAC,GAAG,CAAC;AAAA,UACL,CAAC,GAAG,CAAC;AAAA,UACL,CAAC,GAAG,GAAG,CAAC;AAAA,QACV;AAAA,QACA,OAAO;AAAA,QACP,UAAU;AAAA,MACZ,CAAC;AAAA,MAED,YAAQ,6BAAa;AAAA,QACnB,KAAK;AAAA,QAEL,IAAI;AAAA,UACF,aAAa;AAAA,UACb,YAAY,CAAC,QAAQ,OAAO;AAAA,UAC5B,YAAY,EAAE,QAAQ,CAAC,QAAQ,OAAO,EAAE;AAAA,UACxC,YAAY;AAAA,UACZ,eAAe;AAAA,QACjB;AAAA,QAEA,MAAM;AAAA,MACR,CAAC;AAAA,MAED,UAAM,6BAAa;AAAA,QACjB,KAAK;AAAA,QAEL,MAAM;AAAA,QAEN,IAAI;AAAA,UACF,aAAa;AAAA,UACb,YAAY,CAAC,MAAM;AAAA,UACnB,YAAY,EAAE,QAAQ,CAAC,MAAM,EAAE;AAAA,UAC/B,YAAY;AAAA,UACZ,eAAe;AAAA,UACf,cAAc,EAAE,QAAQ,CAAC,MAAM,EAAE;AAAA,QACnC;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AAAA,EAED,SAAK,kBAAK;AAAA,IAER,QAAQ;AAAA,IAER,IAAI;AAAA,MACF,UAAU;AAAA,IACZ;AAAA,IAEA,QAAQ;AAAA,MACN,UAAM,qBAAK;AAAA,MACX,WAAO,6BAAa,EAAE,KAAK,aAAa,MAAM,KAAK,CAAC;AAAA,IACtD;AAAA,EACF,CAAC;AACH;;;AC9FA,oBAA4B;AAC5B,kBAA2B;AAG3B,qBAAkC;AAIlC,IAAI,gBAAgB,QAAQ,IAAI;AAChC,IAAI,CAAC,iBAAiB,QAAQ,IAAI,aAAa,cAAc;AAC3D,sBAAgB,2BAAY,EAAE,EAAE,SAAS,KAAK;AAChD;AAGA,IAAM,EAAE,SAAS,QAAI,wBAAW;AAAA,EAC9B,SAAS;AAAA,EACT,eAAe;AAAA;AAAA;AAAA;AAAA,EAKf,aAAa;AAAA,EACb,aAAa;AAAA;AAAA;AAAA,EAIb,eAAe;AAAA;AAAA;AAAA;AAAA,IAIb,QAAQ,CAAC,QAAQ,SAAS,UAAU;AAAA;AAAA;AAAA,EAItC;AACF,CAAC;AAKD,IAAM,gBAAgB,KAAK,KAAK,KAAK;AAGrC,IAAM,cAAU,kCAAkB;AAAA,EAChC,QAAQ;AAAA,EACR,QAAQ;AACV,CAAC;;;AF3DD,IAAO,mBAAQ;AAAA,MACb,qBAAO;AAAA,IACL,IAAI;AAAA,MACF,UAAU;AAAA,MACV,KAAK;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,QACJ,QAAQ,CAAC,uBAAuB;AAAA,QAChC,aAAa;AAAA,QACb,SAAS,CAAC,OAAO,MAAM;AAAA,QACvB,gBAAgB,CAAC,gBAAgB,eAAe;AAAA,MAClD;AAAA,MACA,MAAM;AAAA,MACN,kBAAkB,CAAC,QAAQ;AACzB,YAAI,IAAI,UAAU,QAAQ,SAAS,EAAE,OAAO,OAAO,CAAC;AAAA,MACtD;AAAA,IACF;AAAA,EACF,CAAC;AACH;",
  "names": ["import_core", "import_fields"]
}
